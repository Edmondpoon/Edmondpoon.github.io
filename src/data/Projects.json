[
  {"name": "Tetris",
    "date": "August 2020 - December 2020",
    "language": "Python and Pygame",
    "github" : "https://github.com/Edmondpoon/Tetris",
    "description": "A program that allows the user to play a game of tetris.",
    "info": ["This project was my first large project that aims to recreate Tetris using Python and the Pygame module. The program is equipped with the majority of the aspects of the original game, including the increase drop speed/points gained with higher levels and the ability to soft/hard drop blocks.", "NEWLINE", "Though there are numerous changes I would have implemented compared to the original design of the program, I found this project to be a perfect opportunity to put what I learned to use and complete something I could be proud of.",
        "NEWLINE", "With the completion of this project, I feel as though I was able to further develop my programming style and learn new skills/implementations that I can apply to future projects, which includes increasing the reusablity of code and partitioning code into separate files rather than clumping them all into a single file."]
  },
  {"name": "Checkers",
    "date": "March 2021 - April 2021",
    "language": "Python and Pygame",
    "github" : "https://github.com/Edmondpoon/2p-comp-checkers",
    "description": "A program that allows the user to play a game of checkers against a simple bot.",
    "info": ["This project was the second rendition of my attempts to emulate a popular game, in this case, Checkers. The original idea was to allow two users to compete with each other, but I eventually decided to include a simple algorithm that a single user could play against. Although the algorithm is nothing compared to the computer AIs implemented by other game engines, I found the idea of deciding which aspects would make a better move to be extremely interesting and fun to implement.",
        "NEWLINE", "As for this project, I attempted to increase the readability of the code and separate code into functions in hopes of having an easier time when adding features or fixing any possible bugs."]
  },
  {"name": "Huffman Coding",
    "date": "October 2021 - November 2021",
    "language": "C",
    "github" : "https://github.com/Edmondpoon/Huffman-Coding",
    "description": "A program that uses huffman coding to encode and decode any file.",
    "info": ["This program was a school project that I had completed in the Fall of 2021 at UCSC and consists of two executables that emulate the process of Huffman Coding. Huffman coding is known as a lossless data compression algorithm that is able to encode and decode data without losing any of the original data and attempts to reduce the number of bytes needed to convey the original data.",
        "NEWLINE", "The Huffman Coding program was broken down into two executables: one designed to use Huffman encoding to encode any file and attempt to reduce the size of the data while the other was designed to use Huffman decoding to decode any encoded file. All encoded files will have a specific header containing a magic word to differentiate it from other files and meta data needed to decode the data.",
        "NEWLINE", "The Huffman encoding program aims to properly encode any data, whether it's from a file or from standard input, via Huffman coding and offer statistics regarding the space (bytes) saved. Note that it is possible to lose space (use more bytes in the compression) with certain files.",
        "NEWLINE", "As for the Huffman decoding program, it aims to take any encoded data (encoded via the encode executable mentioned above) from standard input or a file and output the original data without any loss in data.",
        "NEWLINE", "This project was one of my first experiences implementing numerous abstract data types from scratch (stack, min heap, priority queue, and bit vector) and gain a deeper understanding of the characteristics of each. Additionally, through the use of lower level function calls such as the read and write functions to emulate the more higher-level functions, I was able to understand how some of the functions I would commonly use (printf, scanf, etc.) was implemented and realize the importance of understanding the tools you use."]
  },
  {"name": "Public-Key Encryption",
    "date": "November 2021",
    "language": "C",
    "github" : "https://github.com/Edmondpoon/Public-Key-Cryptography",
    "description": "A program that emulates the process of RSA key generation and the RSA algorithm.",
    "info": ["This project was a school project that I had completed in the Fall of 2021 at UCSC and consists of three executables that emulate the process of RSA key generation and RSA algorithm. The program was broken down into three executables that help implement the key generation, file encryption, and file decryption using the aforementioned RSA algorithm.",
        "NEWLINE", "The key generation was designed to create two RSA keys (public and private) that will enable the algorithm used to encrypt and decrypt files with a certain level of confidentiality To generate the prime numbers associated with the resultant keys, the program uses the Miller-Rabin primality tests to efficiently identify highly probably prime numbers that satisfy the user's specifications (number of bits that compose the key).",
        "NEWLINE", "The encrpytion program was designed to take either data from standard input or a specific file and encrypt the bytes with a specified public key. Once encrypted, the program will either output the data to standard output or to a specified file.",
        "NEWLINE", "The decryption program is similar to the encryption program except it aims to decrypt encrypted files, whether they are inputted via standard input or a file. Similar to the encrypt program, the decrypted data will either be sent to standard output or a specified file.",
        "NEWLINE", "This project was my first encounter with the GMP library, which allowed for integers larger than 64 bits and the possibility for more secure keys, and allowed me to experience C libraries that I might have overlooked otherwise. Additionally, it was a good opportunity to practice reading documentation about things that I would not normally utilize."]
  },
  {"name": "Portfolio Webpage",
    "date": "August 2022",
    "language": "React and Javascript",
    "github": "",
    "description": "",
    "info": []
  },
  {"name": "Full-Stack Email Manager",
    "date": "July 2022",
    "language": "React, Express, Javascript, Postgresql",
    "github": "",
    "description": "",
    "info": []
  },
  {"name": "Multi-Threaded HTTP server",
    "date": "April 2022",
    "language": "C",
    "github": "",
    "description": "",
    "info": []
  }
]
